01package by.it.mustaphin.jd01_15;
02
03import java.io.*;
04import java.nio.file.Files;
05import java.nio.file.Paths;
06import java.util.*;
07import java.util.regex.Matcher;
08import java.util.regex.Pattern;
09
10
11public class TaskB {
12
13    StringBuilder sb = new StringBuilder();
14
15    
16    void readSrc() {
17        String src = System.getProperty("user.dir") + "/src/by/it/mustaphin/jd01_15/TaskB.java";
18
19        
20
21        
22        try {
23            for (String line : Files.readAllLines(Paths.get(src))) {
24                sb.append(line).append("\n");
25            }
26        } catch (IOException e) {
27            e.printStackTrace();
28        }
29        removeComments();
30    }
31
32    void removeComments() {
33        Pattern lineComent = Pattern.compile(Patterns.patLineComent);
34        String newLine[] = sb.toString().split(Patterns.patMultiComent);
35        sb.setLength(0);
36        for (String line : newLine) {
37            sb.append(line);
38        }
39        List<Integer[]> couple = new ArrayList<>();
40        Matcher mat = lineComent.matcher(sb);
41        while (mat.find()) {
42            couple.add(new Integer[]{mat.start(), mat.end()});
43        }
44        Collections.reverse(couple);
45        for (Integer[] twin : couple) {
46            sb.delete(twin[0], twin[1]);
47        }
48        addLineNumbers();
49        System.out.println(sb);
50    }
51
52    void addLineNumbers() {
53        Pattern newLine = Pattern.compile("\\R");
54        List<Integer> lines = new ArrayList<>();
55        Matcher mat = newLine.matcher(sb);
56        while (mat.find()) {
57            lines.add(mat.start());
58        }
59        Collections.reverse(lines);
60        int lineNumber = lines.size() + 2;
61        for (Integer numb : lines) {
62            sb.insert(numb + 1, getLineNumber(--lineNumber));
63        }
64        sb.insert(0, getLineNumber(1));
65    }
66
67    void writeToFile() {
68        String out = System.getProperty("user.dir") + "/src/by/it/mustaphin/jd01_15/TaskB.txt";
69        try (FileWriter fw = new FileWriter(new File(out))) {
70            fw.write(sb.toString());
71        } catch (IOException e) {
72            e.printStackTrace();
73        }
74    }
75
76    String getLineNumber(int lineNumber) {
77        if (10 > lineNumber) {
78            return "0" + String.valueOf(lineNumber);
79        }
80        return "" + lineNumber;
81    }
82}
83